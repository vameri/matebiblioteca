(dp1
S'output'
p2
S"<type 'exceptions.TypeError'> __call__() takes exactly 1 argument (2 given)"
p3
sS'layer'
p4
S'/home/cleber/web2py/applications/matebiblioteca/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n# -------------------------------------------------------------------------\n# This is a sample controller\n# - index is the default action of any application\n# - user is required for authentication and authorization\n# - download is for downloading files uploaded in the db (does streaming)\n# -------------------------------------------------------------------------\n\n@auth.requires_login()\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n\n    if you need a simple wiki simply replace the two lines below with:\n    return auth.wiki()\n    """\n    response.flash = T("Oi otario!")\n    \n    return locals ()\n    \n#@auth.requires_membership(\'admin\')\ndef cadastrar_livro():\n    response.flash = T(\'Cadastrar livro\')\n    \n    #form = SQLFORM (db.livros)\n    form = crud(db.livros)\n\n    return locals()\n\n    #@auth.requires_membership(\'admin\')\ndef alterar_livro():\n    response.flash = T(\'Cadastrar livro\')\n    \n    id_livro = request.args(0)\n\n    form = SQLFORM (db.livros, record = id_livro, deletable = True)\n\n    if  form.process ().accepted:\n        response.flash = \'livro alterado criado\'\n    elif form.errors:\n        response.flash = \'deu o erro \' + form.errors\n    else:\n        response.flash = \'deu merda\'\n\n    return locals()\n\n#@auth.requires_membership(\'admin\')\ndef listar_livros():\n    response.flash = T(\'Listar livros\')\n\n    #livros = db(db.livros.id > 0).select()\n    livros = SQLFORM.grid(db.livros)\n\n    return locals()\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/bulk_register\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    also notice there is http://..../[app]/appadmin/manage/auth to allow administrator to manage users\n    """\n    return dict(form=auth())\n\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\n\nresponse._vars=response._caller(cadastrar_livro)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/cleber/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/home/cleber/web2py/applications/matebiblioteca/controllers/default.py", line 98, in <module>\n  File "/home/cleber/web2py/gluon/globals.py", line 411, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/cleber/web2py/applications/matebiblioteca/controllers/default.py", line 29, in cadastrar_livro\n    form = crud(db.livros)\nTypeError: __call__() takes exactly 1 argument (2 given)\n'
p11
s.